if has("win32")
  set runtimepath+=~/.vim
endif

set backspace=indent,eol,start
set colorcolumn=+1
set encoding=utf8
set nobackup
set nocompatible
set noswapfile
set nowrap
set nowritebackup
set number
set numberwidth=3
set textwidth=256

" tabs
set autoindent
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" whitespace characters
set listchars=space:·,tab:»\ ,trail:·
set list

" syntax highlighting
syntax on
filetype plugin indent on

" vim-plug
" https://github.com/junegunn/vim-plug
call plug#begin('~/.vim/plug-plugins')

Plug 'altercation/vim-colors-solarized'
Plug 'bronson/vim-trailing-whitespace'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'elzr/vim-json'
Plug 'pangloss/vim-javascript'
Plug 'rust-lang/rust.vim'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vim-syntastic/syntastic'

call plug#end()

" solarized dark
set background=dark

colorscheme solarized

" gVim
if has('gui_running')
  set guifont=Fira\ Code:h18
  set lines=25
  set columns=100
  set renderoptions=type:directx
endif

" NERDTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists('s:std_in') | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'NERDTreeFocus' | exe 'cd '.argv()[0] | endif
autocmd BufEnter * if (winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q | endif

map <C-n> :NERDTreeToggle<CR>

" airline
let g:airline_solarized_bg='dark'

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list=1
let g:syntastic_auto_loc_list=1
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_loc_list_height=5
