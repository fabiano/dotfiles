if has('win32')
  set runtimepath+=~/.vim
endif

set backspace=indent,eol,start
set colorcolumn=+1
set encoding=utf8
set laststatus=2
set nobackup
set nocompatible
set noshowmode
set noswapfile
set nowrap
set nowritebackup
set number
set numberwidth=3
set showtabline=2
set textwidth=256

" tabs
set autoindent
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" whitespace characters
set listchars=space:·,tab:»\ ,trail:·
set list

" syntax highlighting
syntax on
filetype plugin indent on

" gvim
if has('gui_running')
  set guifont=Iosevka:h16
  set guioptions-=e
  set lines=25
  set columns=100
  set renderoptions=type:directx
endif

" vim-plug
" https://github.com/junegunn/vim-plug
call plug#begin('~/.vim/plug-plugins')

Plug 'altercation/vim-colors-solarized'
Plug 'bronson/vim-trailing-whitespace'
Plug 'connorholyday/vim-snazzy'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'editorconfig/editorconfig-vim'
Plug 'itchyny/lightline.vim'
Plug 'mengelbrecht/lightline-bufferline'
Plug 'mhinz/vim-startify'
Plug 'scrooloose/nerdtree'
Plug 'sheerun/vim-polyglot'
Plug 'vim-syntastic/syntastic'

call plug#end()

autocmd VimEnter *
  \  if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \|   PlugInstall --sync | q
  \| endif

" solarized theme
let g:solarized_visibility='low'

" theme
let s:colorscheme='solarized'

if has('gui_running')
  let s:colorscheme='solarized'
elseif has('win32')
  let s:colorscheme='snazzy'
endif

set background=dark
execute 'colorscheme ' . s:colorscheme

" ctrlp.vim
let g:ctrlp_custom_ignore='\v[\/](\.git|node_modules)$'
let g:ctrlp_show_hidden=1

" lightline
let g:lightline={}
let g:lightline.colorscheme=s:colorscheme
let g:lightline.enable={'statusline': 1, 'tabline': 1}
let g:lightline.tabline={'left': [['buffers']], 'right': [[]]}
let g:lightline.component_expand={'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type={'buffers': 'tabsel'}

" nerdtree
autocmd BufEnter * if (winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q | endif

let NERDTreeShowHidden=1

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list=1
let g:syntastic_auto_loc_list=1
let g:syntastic_check_on_open=1
let g:syntastic_check_on_wq=0
let g:syntastic_javascript_checkers=['eslint']
let g:syntastic_loc_list_height=5
let g:syntastic_python_python_exec='python3'

" remaps
noremap <Tab> :bn<CR>
noremap <S-Tab> :bp<CR>
noremap <C-W> :bd<CR>
noremap <C-S> :w!<CR>
noremap <C-n> :NERDTreeFocus<CR>
noremap <C-n><C-n> :NERDTreeToggle<CR>
